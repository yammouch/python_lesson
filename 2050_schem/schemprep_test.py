import schemprep as dut

def parse_cell(cell):
  a = []
  n = int(cell, 16)
  for _ in range(6):
    a.append(n % 2)
    n = n // 2
  return a

def parse_line(s):
  return [parse_cell(c) for c in s.split(',')]

#(deftest room-test
#  (let [fld (mapv parse-line
#                  ;  0              5             10
#                  ["0A,02,02,02,01,  ,  ,  ,  ,  ,  ,  ,  ,  " ; 0
#                   "  ,  ,  ,  ,01,  ,  ,  ,  ,  ,  ,  ,  ,  "
#                   "  ,  ,  ,  ,01,  ,  ,  ,  ,  ,  ,  ,  ,  "
#                   "  ,  ,03,02,  ,  ,  ,  ,  ,  ,  ,  ,  ,  "
#                   "  ,  ,01,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  "
#                   "  ,  ,02,02,02,20,  ,02,02,02,10,  ,  ,  " ; 5
#                   "  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  "
#                   "  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  "
#                   "  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  "
#                   "  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  "
#                   "  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  " ; 10
#                   "  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  "
#                   "  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  "
#                   "  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  "])]
#    (is (= (mlp.schemprep/room fld)
#           [0 8 0 3]))))

#(deftest slide-1d-test
#  (let [pattern
#        [".........." ".........." ".........." ".........." ".........."
#         ".........." ".........." ".........." "....221..." ".........."
#         ".........." ".........." ".........." "......1..." ".........."
#         "....221..." ".221......" "......221." "......1..." ".........."
#         "......1..." "...1......" "........1." ".........." "....221..."
#         "......1..." "...1......" "........1." ".........." "......1..."
#         ".........." ".........." ".........." ".........." "......1..."
#         ".........." ".........." ".........." ".........." ".........."]
#        [fld ex1 ex2 ex3 ex4]
#        (as-> pattern x
#              (map (partial mapv #(parse-cell (str %))) x)
#              (partition 5 x)
#              (apply map vector x))]
#    (is (= (mlp.schemprep/slide-1d fld -3 1) ex1))
#    (is (= (mlp.schemprep/slide-1d fld  2 1) ex2))
#    (is (= (mlp.schemprep/slide-1d fld -2 0) ex3))
#    (is (= (mlp.schemprep/slide-1d fld  1 0) ex4))))
